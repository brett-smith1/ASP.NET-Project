using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace ASP.NET_Project
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddControllersWithViews();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            app.UseDefaultFiles(); //uses index.html as default page
            app.UseStaticFiles(); //makes wwwroot files accessible to public

            //app.Use will execute if file path is not publicly accessible within wwwroot
            app.Use(async (context, next) =>
            {
                await context.Response.WriteAsync("This text was generated by the app.Use middleware. Request path \"" + context.Request.Path.Value + "\"  is unavailable.\n");
                await next.Invoke();
            });

            //app.Run will execute following app.Use
            app.Run(async (context) =>
            {
                await context.Response.WriteAsync("This text was generated by the app.Run middleware.");
            });

        }
    }
}
